{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport { useFonts } from \"expo-font\";\nimport Home from \"./screens/Home\";\nimport Details from \"./screens/Details\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport SignUp from \"./screens/SignUp\";\nimport UserInfo from \"./screens/UserInfo\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { COLORS } from \"./constants\";\nimport ForgotPassword from \"./screens/ForgotPassword\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    background: \"transparent\"\n  })\n});\n\nvar Stack = createStackNavigator();\n\nvar App = function App() {\n  var _useFonts = useFonts({\n    InterBold: require(\"./assets/fonts/Inter-Bold.ttf\"),\n    InterSemiBold: require(\"./assets/fonts/Inter-SemiBold.ttf\"),\n    InterMedium: require(\"./assets/fonts/Inter-Medium.ttf\"),\n    InterRegular: require(\"./assets/fonts/Inter-Regular.ttf\"),\n    InterLight: require(\"./assets/fonts/Inter-Light.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  if (!loaded) return null;\n  return _jsxs(NavigationContainer, {\n    theme: theme,\n    children: [_jsx(StatusBar, {\n      barStyle: 'dark-content'\n    }), \" \", _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      initialRouteName: \"LoginScreen\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home\n      }), \" \", _jsx(Stack.Screen, {\n        name: \"Details\",\n        component: Details\n      }), \" \", _jsx(Stack.Screen, {\n        name: \"LoginScreen\",\n        component: LoginScreen\n      }), \" \", _jsx(Stack.Screen, {\n        name: \"SignUp\",\n        component: SignUp\n      }), \" \", _jsx(Stack.Screen, {\n        name: \"UserInfo\",\n        component: UserInfo\n      }), \" \", _jsx(Stack.Screen, {\n        name: \"ForgotPassword\",\n        component: ForgotPassword\n      }), \" \"]\n    }), \" \"]\n  });\n};\n\nexport default App;","map":{"version":3,"names":["React","createStackNavigator","NavigationContainer","DefaultTheme","useFonts","Home","Details","LoginScreen","SignUp","UserInfo","COLORS","ForgotPassword","theme","colors","background","Stack","App","InterBold","require","InterSemiBold","InterMedium","InterRegular","InterLight","loaded","headerShown"],"sources":["/Users/smartinenq/Desktop/Vitamines/Vitamines/VitaminesGithub/Sans titre/App.js"],"sourcesContent":["import React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport { useFonts } from \"expo-font\";\n\nimport Home from \"./screens/Home\";\nimport Details from \"./screens/Details\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport SignUp from \"./screens/SignUp\";\nimport UserInfo from \"./screens/UserInfo\";\nimport { StatusBar } from \"react-native\";\nimport { COLORS } from \"./constants\";\nimport ForgotPassword from \"./screens/ForgotPassword\";\n\nconst theme = {\n    ...DefaultTheme,\n    colors: {\n        ...DefaultTheme.colors,\n        background: \"transparent\",\n    },\n};\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n    const [loaded] = useFonts({\n        InterBold: require(\"./assets/fonts/Inter-Bold.ttf\"),\n        InterSemiBold: require(\"./assets/fonts/Inter-SemiBold.ttf\"),\n        InterMedium: require(\"./assets/fonts/Inter-Medium.ttf\"),\n        InterRegular: require(\"./assets/fonts/Inter-Regular.ttf\"),\n        InterLight: require(\"./assets/fonts/Inter-Light.ttf\"),\n    });\n\n    if (!loaded) return null;\n\n    return ( <\n        NavigationContainer theme = { theme } >\n        <\n        StatusBar barStyle = { 'dark-content' }\n        /> <\n        Stack.Navigator screenOptions = {\n            {\n                headerShown: false,\n            }\n        }\n        initialRouteName = \"LoginScreen\" >\n        <\n        Stack.Screen name = \"Home\"\n        component = { Home }\n        /> <\n        Stack.Screen name = \"Details\"\n        component = { Details }\n        /> <\n        Stack.Screen name = \"LoginScreen\"\n        component = { LoginScreen }\n        /> <\n        Stack.Screen name = \"SignUp\"\n        component = { SignUp }\n        /> <\n        Stack.Screen name = \"UserInfo\"\n        component = { UserInfo }\n        /> <\n        Stack.Screen name = \"ForgotPassword\"\n        component = { ForgotPassword }\n        /> <\n        /Stack.Navigator> <\n        /NavigationContainer>\n    );\n};\n\nexport default App;"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,0BAAlD;AACA,SAASC,QAAT,QAAyB,WAAzB;AAEA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,OAAOC,WAAP;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP;;AAEA,SAASC,MAAT;AACA,OAAOC,cAAP;;;;AAEA,IAAMC,KAAK,mCACJT,YADI;EAEPU,MAAM,kCACCV,YAAY,CAACU,MADd;IAEFC,UAAU,EAAE;EAFV;AAFC,EAAX;;AAQA,IAAMC,KAAK,GAAGd,oBAAoB,EAAlC;;AAEA,IAAMe,GAAG,GAAG,SAANA,GAAM,GAAM;EACd,gBAAiBZ,QAAQ,CAAC;IACtBa,SAAS,EAAEC,OAAO,iCADI;IAEtBC,aAAa,EAAED,OAAO,qCAFA;IAGtBE,WAAW,EAAEF,OAAO,mCAHE;IAItBG,YAAY,EAAEH,OAAO,oCAJC;IAKtBI,UAAU,EAAEJ,OAAO;EALG,CAAD,CAAzB;EAAA;EAAA,IAAOK,MAAP;;EAQA,IAAI,CAACA,MAAL,EAAa,OAAO,IAAP;EAEb,OAAS,MACL,mBADK;IACe,KAAK,EAAKX,KADzB;IAAA,WAEL,KACA,SADA;MACU,QAAQ,EAAK;IADvB,EAFK,OAIF,MACH,KADG,CACG,SADH;MACa,aAAa,EACzB;QACIY,WAAW,EAAE;MADjB,CAFD;MAMH,gBAAgB,EAAG,aANhB;MAAA,WAOH,KACA,KADA,CACM,MADN;QACa,IAAI,EAAG,MADpB;QAEA,SAAS,EAAKnB;MAFd,EAPG,OAUA,KACH,KADG,CACG,MADH;QACU,IAAI,EAAG,SADjB;QAEH,SAAS,EAAKC;MAFX,EAVA,OAaA,KACH,KADG,CACG,MADH;QACU,IAAI,EAAG,aADjB;QAEH,SAAS,EAAKC;MAFX,EAbA,OAgBA,KACH,KADG,CACG,MADH;QACU,IAAI,EAAG,QADjB;QAEH,SAAS,EAAKC;MAFX,EAhBA,OAmBA,KACH,KADG,CACG,MADH;QACU,IAAI,EAAG,UADjB;QAEH,SAAS,EAAKC;MAFX,EAnBA,OAsBA,KACH,KADG,CACG,MADH;QACU,IAAI,EAAG,gBADjB;QAEH,SAAS,EAAKE;MAFX,EAtBA;IAAA,EAJE;EAAA,EAAT;AAiCH,CA5CD;;AA8CA,eAAeK,GAAf"},"metadata":{},"sourceType":"module"}