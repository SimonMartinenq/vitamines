{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { NFTCard, HomeHeader, FocusedStatusBar } from \"../components\";\nimport { COLORS, NFTData } from \"../constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Home = function Home() {\n  var _useState = useState(NFTData),\n      _useState2 = _slicedToArray(_useState, 2),\n      nftData = _useState2[0],\n      setNftData = _useState2[1];\n\n  var handleSearch = function handleSearch(value) {\n    if (value.length === 0) {\n      setNftData(NFTData);\n    }\n\n    var filteredData = NFTData.filter(function (item) {\n      return item.name.toLowerCase().includes(value.toLowerCase());\n    });\n\n    if (filteredData.length === 0) {\n      setNftData(NFTData);\n    } else {\n      setNftData(filteredData);\n    }\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(FocusedStatusBar, {\n      backgroundColor: COLORS.white\n    }), \" \", _jsxs(View, {\n      style: {\n        flex: 1\n      },\n      children: [_jsx(View, {}), \" \", _jsx(View, {\n        style: {\n          zIndex: 0\n        },\n        children: _jsx(FlatList, {\n          data: nftData,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsx(NFTCard, {\n              data: item\n            });\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          },\n          showsVerticalScrollIndicator: false,\n          ListHeaderComponent: _jsx(HomeHeader, {\n            onSearch: handleSearch\n          })\n        })\n      }), _jsxs(View, {\n        style: {\n          position: \"absolute\",\n          top: 0,\n          bottom: 0,\n          right: 0,\n          left: 0,\n          zIndex: -1\n        },\n        children: [_jsx(View, {\n          style: {\n            height: 300,\n            backgroundColor: COLORS.primary\n          }\n        }), \" \", _jsx(View, {\n          style: {\n            flex: 1,\n            backgroundColor: COLORS.primary\n          }\n        }), \" \"]\n      })]\n    }), \" \"]\n  });\n};\n\nexport default Home;","map":{"version":3,"names":["React","useState","useEffect","firebase","NFTCard","HomeHeader","FocusedStatusBar","COLORS","NFTData","Home","nftData","setNftData","handleSearch","value","length","filteredData","filter","item","name","toLowerCase","includes","flex","white","zIndex","id","position","top","bottom","right","left","height","backgroundColor","primary"],"sources":["/Users/smartinenq/Desktop/Vitamines/Vitamines/VitaminesGithub/Sans titre/screens/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, SafeAreaView, FlatList, Button, Text, Image } from \"react-native\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport { NFTCard, HomeHeader, FocusedStatusBar } from \"../components\";\nimport { COLORS, NFTData } from \"../constants\";\n\n\n\n\nconst Home = () => {\n        const [nftData, setNftData] = useState(NFTData);\n\n        const handleSearch = (value) => {\n            if (value.length === 0) {\n                setNftData(NFTData);\n            }\n\n            const filteredData = NFTData.filter((item) =>\n                item.name.toLowerCase().includes(value.toLowerCase())\n            );\n\n            if (filteredData.length === 0) {\n                setNftData(NFTData);\n            } else {\n                setNftData(filteredData);\n            }\n        };\n        return ( <\n                SafeAreaView style = {\n                    { flex: 1 } } >\n                <\n                FocusedStatusBar backgroundColor = { COLORS.white }\n                /> <\n                View style = {\n                    { flex: 1 } } >\n                <\n                View >\n                <\n                /View> <\n                View style = {\n                    { zIndex: 0 } } >\n                <\n                FlatList data = { nftData }\n                renderItem = {\n                    ({ item }) => < NFTCard data = { item }\n                    />}\n                    keyExtractor = {\n                        (item) => item.id }\n                    showsVerticalScrollIndicator = { false }\n                    ListHeaderComponent = { < HomeHeader onSearch = { handleSearch }\n                        />} /\n                        >\n                        <\n                        /View>\n\n                        <\n                        View\n                        style = {\n                            {\n                                position: \"absolute\",\n                                top: 0,\n                                bottom: 0,\n                                right: 0,\n                                left: 0,\n                                zIndex: -1,\n                            }\n                        } >\n                        <\n                        View\n                        style = {\n                            { height: 300, backgroundColor: COLORS.primary } }\n                        /> <\n                        View style = {\n                            { flex: 1, backgroundColor: COLORS.primary } }\n                        /> <\n                        /View>\n\n                        <\n                        /View> <\n                        /SafeAreaView>\n                    );\n                };\n\n                export default Home;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AAEA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,gBAA9B;AACA,SAASC,MAAT,EAAiBC,OAAjB;;;;AAKA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;EACX,gBAA8BR,QAAQ,CAACO,OAAD,CAAtC;EAAA;EAAA,IAAOE,OAAP;EAAA,IAAgBC,UAAhB;;EAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;IAC5B,IAAIA,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;MACpBH,UAAU,CAACH,OAAD,CAAV;IACH;;IAED,IAAMO,YAAY,GAAGP,OAAO,CAACQ,MAAR,CAAe,UAACC,IAAD;MAAA,OAChCA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCP,KAAK,CAACM,WAAN,EAAjC,CADgC;IAAA,CAAf,CAArB;;IAIA,IAAIJ,YAAY,CAACD,MAAb,KAAwB,CAA5B,EAA+B;MAC3BH,UAAU,CAACH,OAAD,CAAV;IACH,CAFD,MAEO;MACHG,UAAU,CAACI,YAAD,CAAV;IACH;EACJ,CAdD;;EAeA,OAAS,MACD,YADC;IACY,KAAK,EACd;MAAEM,IAAI,EAAE;IAAR,CAFH;IAAA,WAGD,KACA,gBADA;MACiB,eAAe,EAAKd,MAAM,CAACe;IAD5C,EAHC,OAKE,MACH,IADG;MACE,KAAK,EACN;QAAED,IAAI,EAAE;MAAR,CAFD;MAAA,WAGH,KACA,IADA,KAHG,OAMI,KACP,IADO;QACF,KAAK,EACN;UAAEE,MAAM,EAAE;QAAV,CAFG;QAAA,UAGP,KACA,QADA;UACS,IAAI,EAAKb,OADlB;UAEA,UAAU,EACN;YAAA,IAAGO,IAAH,QAAGA,IAAH;YAAA,OAAc,KAAE,OAAF;cAAU,IAAI,EAAKA;YAAnB,EAAd;UAAA,CAHJ;UAKI,YAAY,EACR,sBAACA,IAAD;YAAA,OAAUA,IAAI,CAACO,EAAf;UAAA,CANR;UAOI,4BAA4B,EAAK,KAPrC;UAQI,mBAAmB,EAAK,KAAE,UAAF;YAAa,QAAQ,EAAKZ;UAA1B;QAR5B;MAHO,EANJ,EAuBK,MACA,IADA;QAEA,KAAK,EACD;UACIa,QAAQ,EAAE,UADd;UAEIC,GAAG,EAAE,CAFT;UAGIC,MAAM,EAAE,CAHZ;UAIIC,KAAK,EAAE,CAJX;UAKIC,IAAI,EAAE,CALV;UAMIN,MAAM,EAAE,CAAC;QANb,CAHJ;QAAA,WAYA,KACA,IADA;UAEA,KAAK,EACD;YAAEO,MAAM,EAAE,GAAV;YAAeC,eAAe,EAAExB,MAAM,CAACyB;UAAvC;QAHJ,EAZA,OAgBG,KACH,IADG;UACE,KAAK,EACN;YAAEX,IAAI,EAAE,CAAR;YAAWU,eAAe,EAAExB,MAAM,CAACyB;UAAnC;QAFD,EAhBH;MAAA,EAvBL;IAAA,EALF;EAAA,EAAT;AAsDS,CAxEjB;;AA0EgB,eAAevB,IAAf"},"metadata":{},"sourceType":"module"}