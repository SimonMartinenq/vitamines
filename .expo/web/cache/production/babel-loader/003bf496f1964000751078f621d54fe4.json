{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect}from\"react\";import View from\"react-native-web/dist/exports/View\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import FlatList from\"react-native-web/dist/exports/FlatList\";import Button from\"react-native-web/dist/exports/Button\";import Text from\"react-native-web/dist/exports/Text\";import Image from\"react-native-web/dist/exports/Image\";import firebase from'firebase/app';import'firebase/auth';import'firebase/firestore';import{NFTCard,HomeHeader,FocusedStatusBar}from\"../components\";import{COLORS,NFTData}from\"../constants\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Home=function Home(){var _useState=useState(NFTData),_useState2=_slicedToArray(_useState,2),nftData=_useState2[0],setNftData=_useState2[1];var handleSearch=function handleSearch(value){if(value.length===0){setNftData(NFTData);}var filteredData=NFTData.filter(function(item){return item.name.toLowerCase().includes(value.toLowerCase());});if(filteredData.length===0){setNftData(NFTData);}else{setNftData(filteredData);}};return _jsxs(SafeAreaView,{style:{flex:1},children:[_jsx(FocusedStatusBar,{backgroundColor:COLORS.primary}),_jsxs(View,{style:{flex:1},children:[_jsx(View,{}),_jsx(View,{style:{zIndex:0},children:_jsx(FlatList,{data:nftData,renderItem:function renderItem(_ref){var item=_ref.item;return _jsx(NFTCard,{data:item});},keyExtractor:function keyExtractor(item){return item.id;},showsVerticalScrollIndicator:false,ListHeaderComponent:_jsx(HomeHeader,{onSearch:handleSearch})})}),_jsxs(View,{style:{position:\"absolute\",top:0,bottom:0,right:0,left:0,zIndex:-1},children:[_jsx(View,{style:{height:300,backgroundColor:COLORS.primary}}),_jsx(View,{style:{flex:1,backgroundColor:COLORS.primary}})]})]})]});};export default Home;","map":{"version":3,"names":["React","useState","useEffect","firebase","NFTCard","HomeHeader","FocusedStatusBar","COLORS","NFTData","Home","nftData","setNftData","handleSearch","value","length","filteredData","filter","item","name","toLowerCase","includes","flex","primary","zIndex","id","position","top","bottom","right","left","height","backgroundColor"],"sources":["C:/Users/masso/OneDrive/Documents/Mastercamp/github_test/vitamines/screens/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, SafeAreaView, FlatList , Button,Text,Image} from \"react-native\";\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nimport { NFTCard, HomeHeader, FocusedStatusBar } from \"../components\";\r\nimport { COLORS, NFTData } from \"../constants\";\r\n\r\n\r\n\r\n\r\nconst Home = () => {\r\n  const [nftData, setNftData] = useState(NFTData);\r\n\r\n  const handleSearch = (value) => {\r\n    if (value.length === 0) {\r\n      setNftData(NFTData);\r\n    }\r\n\r\n    const filteredData = NFTData.filter((item) =>\r\n      item.name.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n\r\n    if (filteredData.length === 0) {\r\n      setNftData(NFTData);\r\n    } else {\r\n      setNftData(filteredData);\r\n    }\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ flex: 1 }}>\r\n      <FocusedStatusBar backgroundColor={COLORS.primary} />\r\n      <View style={{ flex: 1 }}>\r\n      <View>\r\n        </View>\r\n        <View style={{ zIndex: 0 }}>\r\n          <FlatList\r\n            data={nftData}\r\n            renderItem={({ item }) => <NFTCard data={item} />}\r\n            keyExtractor={(item) => item.id}\r\n            showsVerticalScrollIndicator={false}\r\n            ListHeaderComponent={<HomeHeader onSearch={handleSearch} />}\r\n          />\r\n        </View>\r\n\r\n        <View\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            bottom: 0,\r\n            right: 0,\r\n            left: 0,\r\n            zIndex: -1,\r\n          }}\r\n        >\r\n          <View\r\n            style={{ height: 300, backgroundColor: COLORS.primary }} />\r\n          <View style={{ flex: 1, backgroundColor: COLORS.primary }} />\r\n        </View>\r\n        \r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"iEAAA,MAAOA,MAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,C,4VAEA,MAAOC,SAAP,KAAqB,cAArB,CACA,MAAO,eAAP,CACA,MAAO,oBAAP,CAEA,OAASC,OAAT,CAAkBC,UAAlB,CAA8BC,gBAA9B,qBACA,OAASC,MAAT,CAAiBC,OAAjB,oB,wFAKA,GAAMC,KAAI,CAAG,QAAPA,KAAO,EAAM,CACjB,cAA8BR,QAAQ,CAACO,OAAD,CAAtC,wCAAOE,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,aAAY,CAAG,QAAfA,aAAe,CAACC,KAAD,CAAW,CAC9B,GAAIA,KAAK,CAACC,MAAN,GAAiB,CAArB,CAAwB,CACtBH,UAAU,CAACH,OAAD,CAAV,CACD,CAED,GAAMO,aAAY,CAAGP,OAAO,CAACQ,MAAR,CAAe,SAACC,IAAD,QAClCA,KAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCP,KAAK,CAACM,WAAN,EAAjC,CADkC,EAAf,CAArB,CAIA,GAAIJ,YAAY,CAACD,MAAb,GAAwB,CAA5B,CAA+B,CAC7BH,UAAU,CAACH,OAAD,CAAV,CACD,CAFD,IAEO,CACLG,UAAU,CAACI,YAAD,CAAV,CACD,CACF,CAdD,CAeA,MACE,OAAC,YAAD,EAAc,KAAK,CAAE,CAAEM,IAAI,CAAE,CAAR,CAArB,WACE,KAAC,gBAAD,EAAkB,eAAe,CAAEd,MAAM,CAACe,OAA1C,EADF,CAEE,MAAC,IAAD,EAAM,KAAK,CAAE,CAAED,IAAI,CAAE,CAAR,CAAb,WACA,KAAC,IAAD,IADA,CAGE,KAAC,IAAD,EAAM,KAAK,CAAE,CAAEE,MAAM,CAAE,CAAV,CAAb,UACE,KAAC,QAAD,EACE,IAAI,CAAEb,OADR,CAEE,UAAU,CAAE,6BAAGO,KAAH,MAAGA,IAAH,OAAc,MAAC,OAAD,EAAS,IAAI,CAAEA,IAAf,EAAd,EAFd,CAGE,YAAY,CAAE,sBAACA,IAAD,QAAUA,KAAI,CAACO,EAAf,EAHhB,CAIE,4BAA4B,CAAE,KAJhC,CAKE,mBAAmB,CAAE,KAAC,UAAD,EAAY,QAAQ,CAAEZ,YAAtB,EALvB,EADF,EAHF,CAaE,MAAC,IAAD,EACE,KAAK,CAAE,CACLa,QAAQ,CAAE,UADL,CAELC,GAAG,CAAE,CAFA,CAGLC,MAAM,CAAE,CAHH,CAILC,KAAK,CAAE,CAJF,CAKLC,IAAI,CAAE,CALD,CAMLN,MAAM,CAAE,CAAC,CANJ,CADT,WAUE,KAAC,IAAD,EACE,KAAK,CAAE,CAAEO,MAAM,CAAE,GAAV,CAAeC,eAAe,CAAExB,MAAM,CAACe,OAAvC,CADT,EAVF,CAYE,KAAC,IAAD,EAAM,KAAK,CAAE,CAAED,IAAI,CAAE,CAAR,CAAWU,eAAe,CAAExB,MAAM,CAACe,OAAnC,CAAb,EAZF,GAbF,GAFF,GADF,CAkCD,CApDD,CAsDA,cAAeb,KAAf"},"metadata":{},"sourceType":"module"}